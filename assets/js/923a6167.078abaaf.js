"use strict";(self.webpackChunkalexmercerind_github_io=self.webpackChunkalexmercerind_github_io||[]).push([[563],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return n?i.createElement(f,l(l({ref:t},c),{},{components:n})):i.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7905:function(e,t,n){n.d(t,{Z:function(){return m}});var i=n(5861),a=n(7757),r=n.n(a),l=n(7294),o=n(5529),s=n(5742),d="iconBar_ZOQh",c="icon_pT5I",u="iconLabel_q6Wh",p="iconContainer__tjb";function m(e){var t,n,a,m=e.repository,f=e.type,h=(0,l.useState)(null),w=h[0],v=h[1];return(0,l.useEffect)((0,i.Z)(r().mark((function e(){var t,n;return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://api.github.com/repos/"+m);case 2:return t=e.sent,e.next=5,t.json();case 5:n=e.sent,v(n);case 7:case"end":return e.stop()}}),e)}))),[]),l.createElement("div",null,l.createElement(s.Z,null,l.createElement("link",{href:"https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@700&display=swap",rel:"stylesheet"})),l.createElement("a",{target:"_blank",href:"https://github.com/"+m},"GitHub")," \u2022 ","pub.dev"==f?l.createElement("a",{target:"_blank",href:"https://pub.dev/packages/"+m.split("/")[m.split("/").length-1]},"pub.dev"):l.createElement("a",{target:"_blank",href:"https://pypi.org/project/"+m.split("/")[m.split("/").length-1]},"PyPI.org")," \u2022 Give us a \u2b50 on GitHub.",l.createElement("div",{className:d},l.createElement("div",{className:p},l.createElement("div",{className:c},l.createElement(o.r7p,{size:"small"})),l.createElement("div",{className:u},(null!=(t=null==w?void 0:w.stargazers_count)?t:"Unknown")+" Stars")),l.createElement("div",{className:p},l.createElement("div",{className:c},l.createElement(o.jcu,{size:"small"})),l.createElement("div",{className:u},(null!=(n=null==w?void 0:w.forks_count)?n:"Unknown")+" Forks")),l.createElement("div",{className:p},l.createElement("div",{className:c},l.createElement(o.tEF,{size:"small"})),l.createElement("div",{className:u},(null!=(a=null==w?void 0:w.subscribers_count)?a:"Unknown")+" Watchers"))))}},4951:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),l=n(7905),o=["components"],s={id:"flutter_native_view",title:"flutter_native_view",description:"Embedding native windows into Flutter window.",hide_title:!0},d="flutter_native_view",c={unversionedId:"flutter_native_view",id:"flutter_native_view",title:"flutter_native_view",description:"Embedding native windows into Flutter window.",source:"@site/docs/flutter_native_view.md",sourceDirName:".",slug:"/flutter_native_view",permalink:"/docs/flutter_native_view",editUrl:"https://github.com/alexmercerind/alexmercerind.github.io/edit/master/docs/flutter_native_view.md",tags:[],version:"current",frontMatter:{id:"flutter_native_view",title:"flutter_native_view",description:"Embedding native windows into Flutter window.",hide_title:!0},sidebar:"main",previous:{title:"flutter_media_metadata",permalink:"/docs/flutter_media_metadata"},next:{title:"windows_taskbar",permalink:"/docs/windows_taskbar"}},u={},p=[{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Features",id:"features",level:2},{value:"Currently Implemented",id:"currently-implemented",level:4},{value:"Under Progress",id:"under-progress",level:4},{value:"Limitations &amp; Known Issues",id:"limitations--known-issues",level:2},{value:"Platforms",id:"platforms",level:2},{value:"License",id:"license",level:2}],m={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"flutter_native_view"},"flutter_native_view"),(0,r.kt)("p",null,"Embedding native windows into Flutter window."),(0,r.kt)(l.Z,{repository:"alexmercerind/flutter_native_view",type:"pub.dev",mdxType:"DocsHeader"}),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"A Flutter plugin / C++ library to embed other native Windows (",(0,r.kt)("inlineCode",{parentName:"p"},"HWND")," on Windows, ",(0,r.kt)("inlineCode",{parentName:"p"},"GtkWidget*")," on Linux etc.) into Flutter window."),(0,r.kt)("p",null,"Current API design allows to embed any arbitrary ",(0,r.kt)("inlineCode",{parentName:"p"},"HWND")," completely from Dart as a ",(0,r.kt)("inlineCode",{parentName:"p"},"Widget"),". This can be a good choice when client code wants to embed any arbitrary third-party window (which is already opened) into the Flutter window.\nHowever, this is not ideal in most cases because there is almost no point of embedding a third-party window directly (which will lack programmatic control via some API)."),(0,r.kt)("p",null,"On the other hand, a window created by the client code itself e.g. a webview instance window or a video-output window etc. (on which the client code has full programmatic control) will be an ideal window to embed, in that case:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If client code decides to create an ",(0,r.kt)("inlineCode",{parentName:"li"},"HWND")," through platform channel interface, they can use the setup present in ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/alexmercerind/flutter_native_view/tree/master/core"},(0,r.kt)("inlineCode",{parentName:"a"},"core"))," to embed a window."),(0,r.kt)("li",{parentName:"ul"},"Since ",(0,r.kt)("inlineCode",{parentName:"li"},"dart:ffi")," is very capable now, one can pass the ",(0,r.kt)("inlineCode",{parentName:"li"},"HWND")," directly as ",(0,r.kt)("inlineCode",{parentName:"li"},"int")," of the window they created using ",(0,r.kt)("inlineCode",{parentName:"li"},"dart:ffi")," or ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/timsneath/win32"},(0,r.kt)("inlineCode",{parentName:"a"},"win32"))," through existing plugin API to embed it.")),(0,r.kt)("video",{controls:!0,style:{width:"100%"},src:"https://user-images.githubusercontent.com/28951144/158053165-bcc74341-8f93-4a58-ab88-d92d1ce7fa71.mp4"}),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"class _MyAppState extends State<MyApp> {\n  // Create a [NativeViewController].\n  final controller = NativeViewController(\n    // Using [FindWindow] from `package:win32` to retrieve [HWND] as [int].\n    windowHandle: FindWindow(nullptr, 'VLC Media Player'.toNativeUtf16()));\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        body: Center(\n            child: Padding(\n              padding: const EdgeInsets.all(24.0),\n              child: Stack(\n                children: [\n                  LayoutBuilder(\n                    builder: (context, constraints) => NativeView(\n                      // Pass [NativeViewController] to render the window.\n                      controller: controller,\n                      width: constraints.maxWidth,\n                      height: constraints.maxHeight,\n                    ),\n                  ),\n                  Padding(\n                    padding: const EdgeInsets.all(16.0),\n                    child: FloatingActionButton(\n                      onPressed: () {},\n                      child: const Icon(Icons.edit),\n                    ),\n                  ),\n                ],\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n")),(0,r.kt)("h2",{id:"motivation"},"Motivation"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/flutter/flutter/issues/31713"},"https://github.com/flutter/flutter/issues/31713")),(0,r.kt)("p",null,"Absence of official Platform View APIs in Flutter for Windows, Linux & macOS."),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("h4",{id:"currently-implemented"},"Currently Implemented"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Placement of other Flutter ",(0,r.kt)("inlineCode",{parentName:"li"},"Widget"),"s on top of the ",(0,r.kt)("inlineCode",{parentName:"li"},"NativeView"),"."),(0,r.kt)("li",{parentName:"ul"},"Multiple instances of ",(0,r.kt)("inlineCode",{parentName:"li"},"NativeView"),"."),(0,r.kt)("li",{parentName:"ul"},"Window movement handling & ",(0,r.kt)("inlineCode",{parentName:"li"},"NativeView"),"s positioning."),(0,r.kt)("li",{parentName:"ul"},"Window resize handling & ",(0,r.kt)("inlineCode",{parentName:"li"},"NativeView"),"s sizing."),(0,r.kt)("li",{parentName:"ul"},"Windows 7 SP1 >= support.")),(0,r.kt)("h4",{id:"under-progress"},"Under Progress"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Finalized API."),(0,r.kt)("li",{parentName:"ul"},"Fixing airspace issues."),(0,r.kt)("li",{parentName:"ul"},"Interractions with the ",(0,r.kt)("inlineCode",{parentName:"li"},"NativeView")," e.g. mouse clicks or keyboard presses."),(0,r.kt)("li",{parentName:"ul"},"Lazy resizing of ",(0,r.kt)("inlineCode",{parentName:"li"},"NativeView")," ",(0,r.kt)("inlineCode",{parentName:"li"},"Widget")," after changing size of the underlying native window to avoid airspace."),(0,r.kt)("li",{parentName:"ul"},"Removing Win32 specific types & ",(0,r.kt)("inlineCode",{parentName:"li"},"ifdef")," magic.")),(0,r.kt)("h2",{id:"limitations--known-issues"},"Limitations & Known Issues"),(0,r.kt)("p",null,"This setup though performant & highly customizable has few limitations right now:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Minimizing or maximizing the parent Flutter window isn't very pleasing to look at."),(0,r.kt)("li",{parentName:"ul"},"Window snapping animations on Windows 11 causes the that new indicator to render on top of the child ",(0,r.kt)("inlineCode",{parentName:"li"},"HWND"),"s (z-order?)."),(0,r.kt)("li",{parentName:"ul"},"Resizing window causes ",(0,r.kt)("inlineCode",{parentName:"li"},"NativeView"),"s to lag behind (race? slow ",(0,r.kt)("inlineCode",{parentName:"li"},"flutter::MethodResultFunctions"),"?). Maybe notifying the global positions of the ",(0,r.kt)("inlineCode",{parentName:"li"},"NativeView")," upon every ",(0,r.kt)("inlineCode",{parentName:"li"},"build")," using ",(0,r.kt)("inlineCode",{parentName:"li"},"dart:ffi")," will be better?")),(0,r.kt)("h2",{id:"platforms"},"Platforms"),(0,r.kt)("p",null,"The plugin currently works on following platforms:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Platform"),(0,r.kt)("th",{parentName:"tr",align:null},"State"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Windows"),(0,r.kt)("td",{parentName:"tr",align:null},"Working")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Linux"),(0,r.kt)("td",{parentName:"tr",align:null},"Not Yet")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"macOS"),(0,r.kt)("td",{parentName:"tr",align:null},"Not Yet")))),(0,r.kt)("h2",{id:"license"},"License"),(0,r.kt)("p",null,"Currently licensing strictly."),(0,r.kt)("p",null,"GNU General Public License v3.0"),(0,r.kt)("p",null,"Copyright (C) 2021, Hitesh Kumar Saini ",(0,r.kt)("a",{parentName:"p",href:"mailto:%3Csaini123hitesh@gmail.com"},"<saini123hitesh@gmail.com"),">"))}f.isMDXComponent=!0}}]);